package janken.visualComponents;

import java.awt.Desktop;
import java.awt.Image;
import java.awt.MediaTracker;
import java.net.URI;
import java.net.URL;
import java.util.List;

import javax.swing.ImageIcon;
import javax.swing.SwingUtilities;

import janken.Main;
import janken.cotohaAPI.SentimentData;
import janken.opponent.Hikakin;
import janken.opponent.Keisuke;
import janken.opponent.Opponent;
import janken.opponent.Sazae;
import janken.youtubeDataAPIv3.Search_ResponseData;
import janken.youtubeDataAPIv3.Video;
import janken.youtubeDataAPIv3.Video_Snippet;

public class JankenResultPanel extends javax.swing.JPanel {

	private int jankenResult = -1;
	private Opponent opponent;
	private SentimentData sentimentData;
	private String open2URL = "";
	private String open3URL = "";

	/**
	 * Creates new form JankenResultPanel
	 */
	public JankenResultPanel() {
		initComponents();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
	private void initComponents() {
		java.awt.GridBagConstraints gridBagConstraints;

		losePanel = new javax.swing.JPanel();
		jLabel3 = new javax.swing.JLabel();
		jLabel4 = new javax.swing.JLabel();
		jButton2 = new javax.swing.JButton();
		victoryPanel = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		jLabel2 = new javax.swing.JLabel();
		jPanel1 = new javax.swing.JPanel();
		jButton1 = new javax.swing.JButton();
		jButton3 = new javax.swing.JButton();
		videoPanel = new javax.swing.JPanel();
		jScrollPane1 = new javax.swing.JScrollPane();
		jTextArea1 = new javax.swing.JTextArea();
		jPanel2 = new javax.swing.JPanel();
		img2 = new javax.swing.JLabel();
		jScrollPane2 = new javax.swing.JScrollPane();
		title2 = new javax.swing.JTextArea();
		open2 = new javax.swing.JButton();
		jPanel3 = new javax.swing.JPanel();
		img3 = new javax.swing.JLabel();
		jScrollPane3 = new javax.swing.JScrollPane();
		title3 = new javax.swing.JTextArea();
		open3 = new javax.swing.JButton();
		jButton4 = new javax.swing.JButton();

		setBackground(new java.awt.Color(204, 204, 204));
		setLayout(new java.awt.CardLayout());

		losePanel.setBackground(new java.awt.Color(204, 204, 204));
		losePanel.setLayout(new java.awt.GridBagLayout());

		jLabel3.setFont(Main.PIXEL_MPLUS_32);
		jLabel3.setForeground(new java.awt.Color(51, 51, 51));
		jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel3.setText("勝敗が分かりませんでした。");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.2;
		gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 20);
		losePanel.add(jLabel3, gridBagConstraints);

		jLabel4.setForeground(new java.awt.Color(102, 102, 102));
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.8;
		gridBagConstraints.insets = new java.awt.Insets(10, 20, 10, 20);
		losePanel.add(jLabel4, gridBagConstraints);

		jButton2.setBackground(new java.awt.Color(51, 153, 255));
		jButton2.setFont(Main.PIXEL_MPLUS_16);
		jButton2.setForeground(new java.awt.Color(51, 51, 51));
		jButton2.setText("もう一度やる");
		jButton2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton2ActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(0, 20, 15, 0);
		losePanel.add(jButton2, gridBagConstraints);

		add(losePanel, "lose");

		victoryPanel.setBackground(new java.awt.Color(204, 204, 204));
		victoryPanel.setLayout(new java.awt.GridBagLayout());

		jLabel1.setFont(Main.PIXEL_MPLUS_32);
		jLabel1.setForeground(new java.awt.Color(255, 51, 51));
		jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		jLabel1.setText("勝ちました！");
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.2;
		gridBagConstraints.insets = new java.awt.Insets(20, 20, 0, 20);
		victoryPanel.add(jLabel1, gridBagConstraints);

		jLabel2.setForeground(new java.awt.Color(102, 102, 102));
		jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.8;
		gridBagConstraints.insets = new java.awt.Insets(10, 20, 10, 20);
		victoryPanel.add(jLabel2, gridBagConstraints);

		jPanel1.setBackground(new java.awt.Color(204, 204, 204));
		jPanel1.setLayout(new java.awt.GridBagLayout());

		jButton1.setBackground(new java.awt.Color(51, 153, 255));
		jButton1.setFont(Main.PIXEL_MPLUS_16);
		jButton1.setForeground(new java.awt.Color(51, 51, 51));
		jButton1.setText("もう一度やる");
		jButton1.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton1ActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.weightx = 0.5;
		gridBagConstraints.weighty = 1.0;
		jPanel1.add(jButton1, gridBagConstraints);

		jButton3.setBackground(new java.awt.Color(255, 102, 51));
		jButton3.setFont(Main.PIXEL_MPLUS_16);
		jButton3.setForeground(new java.awt.Color(51, 51, 51));
		jButton3.setText("おすすめ動画を見る");
		jButton3.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton3ActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 0;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.EAST;
		gridBagConstraints.weightx = 0.5;
		gridBagConstraints.weighty = 1.0;
		jPanel1.add(jButton3, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(0, 20, 15, 20);
		victoryPanel.add(jPanel1, gridBagConstraints);

		add(victoryPanel, "victory");

		videoPanel.setBackground(new java.awt.Color(204, 204, 204));
		videoPanel.setLayout(new java.awt.GridBagLayout());

		jScrollPane1.setBackground(new java.awt.Color(204, 204, 204));
		jScrollPane1.setBorder(null);

		jTextArea1.setEditable(false);
		jTextArea1.setBackground(new java.awt.Color(204, 204, 204));
		jTextArea1.setColumns(20);
		jTextArea1.setFont(Main.PIXEL_MPLUS_16);
		jTextArea1.setForeground(new java.awt.Color(51, 51, 51));
		jTextArea1.setLineWrap(true);
		jTextArea1.setRows(3);
		jTextArea1.setText("分析の結果");
		jScrollPane1.setViewportView(jTextArea1);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.1;
		gridBagConstraints.insets = new java.awt.Insets(20, 20, 10, 20);
		videoPanel.add(jScrollPane1, gridBagConstraints);

		jPanel2.setBackground(new java.awt.Color(204, 204, 204));
		jPanel2.setLayout(new java.awt.GridBagLayout());
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridheight = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
		gridBagConstraints.weighty = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
		jPanel2.add(img2, gridBagConstraints);

		jScrollPane2.setBorder(null);

		title2.setEditable(false);
		title2.setBackground(new java.awt.Color(204, 204, 204));
		title2.setColumns(20);
		title2.setFont(Main.PIXEL_MPLUS_12);
		title2.setForeground(new java.awt.Color(51, 51, 51));
		title2.setLineWrap(true);
		title2.setRows(3);
		jScrollPane2.setViewportView(title2);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		jPanel2.add(jScrollPane2, gridBagConstraints);

		open2.setBackground(new java.awt.Color(255, 0, 0));
		open2.setFont(Main.PIXEL_MPLUS_16);
		open2.setForeground(new java.awt.Color(51, 51, 51));
		open2.setText("動画を見る");
		open2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				open2ActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(5, 0, 10, 0);
		jPanel2.add(open2, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.45;
		gridBagConstraints.insets = new java.awt.Insets(0, 20, 10, 20);
		videoPanel.add(jPanel2, gridBagConstraints);

		jPanel3.setBackground(new java.awt.Color(204, 204, 204));
		jPanel3.setLayout(new java.awt.GridBagLayout());
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridheight = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTH;
		gridBagConstraints.weighty = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 10);
		jPanel3.add(img3, gridBagConstraints);

		jScrollPane3.setBorder(null);

		title3.setEditable(false);
		title3.setBackground(new java.awt.Color(204, 204, 204));
		title3.setColumns(20);
		title3.setFont(Main.PIXEL_MPLUS_12);
		title3.setForeground(new java.awt.Color(51, 51, 51));
		title3.setLineWrap(true);
		title3.setRows(3);
		jScrollPane3.setViewportView(title3);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 1.0;
		jPanel3.add(jScrollPane3, gridBagConstraints);

		open3.setBackground(new java.awt.Color(255, 0, 51));
		open3.setFont(Main.PIXEL_MPLUS_16);
		open3.setForeground(new java.awt.Color(51, 51, 51));
		open3.setText("動画を見る");
		open3.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				open3ActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 1;
		gridBagConstraints.gridy = 1;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(5, 0, 10, 0);
		jPanel3.add(open3, gridBagConstraints);

		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 2;
		gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.weighty = 0.45;
		gridBagConstraints.insets = new java.awt.Insets(0, 20, 10, 20);
		videoPanel.add(jPanel3, gridBagConstraints);

		jButton4.setBackground(new java.awt.Color(0, 204, 255));
		jButton4.setFont(Main.PIXEL_MPLUS_16);
		jButton4.setForeground(new java.awt.Color(51, 51, 51));
		jButton4.setText("もう一度やる");
		jButton4.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jButton4ActionPerformed(evt);
			}
		});
		gridBagConstraints = new java.awt.GridBagConstraints();
		gridBagConstraints.gridx = 0;
		gridBagConstraints.gridy = 3;
		gridBagConstraints.anchor = java.awt.GridBagConstraints.WEST;
		gridBagConstraints.weightx = 1.0;
		gridBagConstraints.insets = new java.awt.Insets(0, 20, 15, 20);
		videoPanel.add(jButton4, gridBagConstraints);

		add(videoPanel, "video");
	}// </editor-fold>//GEN-END:initComponents

	private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
		// TODO add your handling code here:
		javax.swing.JPanel parent = (javax.swing.JPanel) SwingUtilities.getAncestorOfClass(javax.swing.JPanel.class, this);
		java.awt.CardLayout layout = (java.awt.CardLayout) parent.getLayout();

		layout.show(parent, "card2");
	}//GEN-LAST:event_jButton2ActionPerformed

	private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
		// TODO add your handling code here:
		javax.swing.JPanel parent = (javax.swing.JPanel) SwingUtilities.getAncestorOfClass(javax.swing.JPanel.class, this);
		java.awt.CardLayout layout = (java.awt.CardLayout) parent.getLayout();

		layout.show(parent, "card2");
	}//GEN-LAST:event_jButton1ActionPerformed

	private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
		// TODO add your handling code here:
		//動画表示
		new Thread(new Runnable() {
			public void run() {
				updateVideoDisplay();
			}
		}).start();

		java.awt.CardLayout resultLayout = (java.awt.CardLayout) this.getLayout();
		resultLayout.show(this, "video");
	}//GEN-LAST:event_jButton3ActionPerformed

	private void open2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_open2ActionPerformed
		// TODO add your handling code here:
		if (open2URL.isEmpty()) {
			return;
		}
		String uriString = open2URL; // 開くURL
		Desktop desktop = Desktop.getDesktop();
		try {
			URI uri = new URI(uriString);
			desktop.browse(uri);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}//GEN-LAST:event_open2ActionPerformed

	private void open3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_open3ActionPerformed
		// TODO add your handling code here:
		if (open3URL.isEmpty()) {
			return;
		}
		String uriString = open3URL; // 開くURL
		Desktop desktop = Desktop.getDesktop();
		try {
			URI uri = new URI(uriString);
			desktop.browse(uri);
		} catch (Exception e) {
			e.printStackTrace();
		}
	}//GEN-LAST:event_open3ActionPerformed

	private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
		// TODO add your handling code here:
		javax.swing.JPanel parent = (javax.swing.JPanel) SwingUtilities.getAncestorOfClass(javax.swing.JPanel.class, this);
		java.awt.CardLayout layout = (java.awt.CardLayout) parent.getLayout();

		layout.show(parent, "card2");
	}//GEN-LAST:event_jButton4ActionPerformed

	public void setJankenResult(int result) {
		this.jankenResult = result;
	}

	public void setOpponent(Opponent opponent) {
		this.opponent = opponent;
	}

	public void setSentimentData(SentimentData data) {
		this.sentimentData = data;
	}

	public void updateVideoDisplay() {
		//動画表示画面構築
		String emo = sentimentData.getResult().getEmotionals();
		Search_ResponseData data = Main.getYoutube().search(opponent.getName() + " " + emo.replaceAll("、", " "));
		if (Main.DEBUG) {
			System.out.println("youtubeDataAPIのレスポンス---------------");
			System.out.println(data);
		}

		try {
			List<Video> videos = data.getItems();
			int i = 0;
			if(data.getPageInfo().getResultsPerPage() < 2) {
				title3.setText("見つかりませんでした。");
				if(data.getPageInfo().getResultsPerPage() < 1) {
					title2.setText("見つかりませんでした。");
				}
			}

			for (Video video : videos) {
				Video_Snippet snippet = video.getSnippet();
				String videoId = video.getId().getVideoId();
				if (i == 0) {
					img2.setIcon(resizeImg(new ImageIcon(new URL(snippet.getThumbnails().getMedium().getUrl())), 0.75));
					title2.setText(snippet.getTitle() + "\n\n" + snippet.getDescription());
					if (videoId.isEmpty() || videoId.equals("null")) {
						title2.setText("見つかりませんでした。");
						continue;
					}
					open2URL = "https://www.youtube.com/watch?v=" + videoId;
					open2.setEnabled(true);
				} else if (i == 1) {

					img3.setIcon(resizeImg(new ImageIcon(new URL(snippet.getThumbnails().getMedium().getUrl())), 0.75));
					title3.setText(snippet.getTitle() + "\n\n" + snippet.getDescription());
					if (videoId.isEmpty() || videoId.equals("null")) {
						title3.setText("見つかりませんでした。");
						continue;
					}
					open3URL = "https://www.youtube.com/watch?v=" + videoId;
					open3.setEnabled(true);
				}
				i++;
			}
		} catch (Exception e) {
			if(Main.DEBUG) {
				e.printStackTrace();
			}
			img2.setIcon(new ImageIcon("./images/img_nonVideo.png"));
			title2.setText("見つかりませんでした。");
			open2.setEnabled(false);
			img3.setIcon(new ImageIcon("./images/img_nonVideo.png"));
			title3.setText("見つかりませんでした。");
			open3.setEnabled(false);
			System.out.println("youtubeからのデータ取得で何かエラーがおきました。");
		}
	}

	private ImageIcon resizeImg(ImageIcon icon, double scale) {
		MediaTracker tracker = new MediaTracker(this);
		Image img = icon.getImage().getScaledInstance((int) (icon.getIconWidth() * scale), -1,
				Image.SCALE_SMOOTH);
		tracker.addImage(img, 1);
		try {
			tracker.waitForAll();
		} catch (InterruptedException e) {
			if(Main.DEBUG) {
				e.printStackTrace();
			}
			System.out.println("画像resize時に何かエラーがおきました。");
		}
		ImageIcon result = new ImageIcon(img);
		return result;
	}

	public void updateDisplay() {
		java.awt.CardLayout resultLayout = (java.awt.CardLayout) this.getLayout();
		if (jankenResult == Main.VICTORY) {
			if (opponent instanceof Hikakin) {
				jLabel2.setIcon(new ImageIcon("./images/img_hikakin_win.png"));
			} else if (opponent instanceof Sazae) {
				if (opponent.getSelectHand() == Main.GU) {
					jLabel2.setIcon(new ImageIcon("./images/img_sazae_gu.png"));
				} else if (opponent.getSelectHand() == Main.CHO) {
					jLabel2.setIcon(new ImageIcon("./images/img_sazae_cho.png"));
				} else if (opponent.getSelectHand() == Main.PA) {
					jLabel2.setIcon(new ImageIcon("./images/img_sazae_pa.png"));
				}
			} else if (opponent instanceof Keisuke) {
				jLabel2.setIcon(new ImageIcon("./images/img_keisuke_win.png"));
			}

			//動画表示ページのテキスト処理
			String emo = sentimentData.getResult().getEmotionals();
			if (emo.isEmpty()) {
				jTextArea1.setText("あなたの文章からは詳しい感情を分析出来ませんでした。\n普通におすすめ動画を表示しています。");
			} else {
				jTextArea1.setText("あなたの文章から" + emo + "という感情を分析しました。\nその感情に応じたおすすめ動画を表示しています。");
			}
			img2.setIcon(new ImageIcon("./images/img_nonVideo.png"));
			title2.setText("準備中です。");
			open2.setEnabled(false);
			img3.setIcon(new ImageIcon("./images/img_nonVideo.png"));
			title3.setText("準備中です。");
			open3.setEnabled(false);

			resultLayout.show(this, "victory");
		} else {
			if (jankenResult == Main.DRAW) {
				jLabel3.setText("引き分けました");
			} else if (jankenResult == Main.LOSE) {
				jLabel3.setText("負けました.....");
			} else {
				jLabel3.setText("勝敗が分かりませんでした。");
			}
			if (opponent instanceof Hikakin) {
				jLabel4.setIcon(new ImageIcon("./images/img_hikakin_lose.png"));
			} else if (opponent instanceof Sazae) {
				if (opponent.getSelectHand() == Main.GU) {
					jLabel4.setIcon(new ImageIcon("./images/img_sazae_gu.png"));
				} else if (opponent.getSelectHand() == Main.CHO) {
					jLabel4.setIcon(new ImageIcon("./images/img_sazae_cho.png"));
				} else if (opponent.getSelectHand() == Main.PA) {
					jLabel4.setIcon(new ImageIcon("./images/img_sazae_pa.png"));
				}
			} else if (opponent instanceof Keisuke) {
				jLabel4.setIcon(new ImageIcon("./images/img_keisuke_lose.png"));
			}

			resultLayout.show(this, "lose");
		}
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JLabel img2;
	private javax.swing.JLabel img3;
	private javax.swing.JButton jButton1;
	private javax.swing.JButton jButton2;
	private javax.swing.JButton jButton3;
	private javax.swing.JButton jButton4;
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JLabel jLabel4;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JPanel jPanel3;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JScrollPane jScrollPane2;
	private javax.swing.JScrollPane jScrollPane3;
	private javax.swing.JTextArea jTextArea1;
	private javax.swing.JPanel losePanel;
	private javax.swing.JButton open2;
	private javax.swing.JButton open3;
	private javax.swing.JTextArea title2;
	private javax.swing.JTextArea title3;
	private javax.swing.JPanel victoryPanel;
	private javax.swing.JPanel videoPanel;
	// End of variables declaration//GEN-END:variables
}
